<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>todo-ws</title>
  <script src="https://cdn.jsdelivr.net/npm/@tailwindcss/browser@4"></script>
  <script src="/socket.io/socket.io.js"></script>
</head>

<body
  class="w-screen min-h-screen flex items-center bg-[#010e28] bg-[linear-gradient(to_bottom,_#082740_1px,_transparent_1px),_linear-gradient(to_right,_#082740_1px,_transparent_1px)] [background-size:30px_30px] bg-center overflow-x-hidden animate-bgmove">
  >
  <div class="max-w-md mx-auto bg-white shadow-lg rounded-lg overflow-hidden mt-16">
    <div class="px-4 py-2">
      <h1 class="text-gray-800 font-bold text-2xl uppercase">To-Do List</h1>
    </div>
    <form class="w-full max-w-sm mx-auto px-4 py-2" onsubmit="addTodo()">
      <div class="flex items-center border-b-2 border-teal-500 py-2">
        <input
          class="appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none"
          type="text" placeholder="Add a task" id="newTask" />
        <button
          class="flex-shrink-0 bg-teal-500 hover:bg-teal-700 border-teal-500 hover:border-teal-700 text-sm border-4 text-white py-1 px-2 rounded"
          type="submit">
          Add
        </button>
      </div>
    </form>
    <ul class="divide-y divide-gray-200 px-4 max-h-[30vh] overflow-y-auto" id="ul-todo">

    </ul>
  </div>
  <script>
    const socket = io();
    document.addEventListener("DOMContentLoaded",()=>{
      socket.emit("fetchPending");
    })
    socket.on("todoResponse", (data) => {
      console.log(data)
      console.log("k cha hajur")
      if (data.status === "success") {
        console.log("Thik cha hajur")
        updateTodoList(data.data);
      }
      else {
        console.log("status success chaina hae")
      }
    })

    function updateTodoList(todos) {
      console.log("eyo function call vako cha")
      console.log(todos)
      const todoList = document.getElementById('ul-todo')
      todoList.innerHTML = "";
      todos.forEach(todo => {
        const listItem = document.createElement('li');
        listItem.className = "py-4";
        listItem.innerHTML = `
      <div class="flex items-center">
        <input
          id="todo_${todo._id}"
          name="todo_${todo._id}"
          type="checkbox"
          class="h-4 w-4 text-teal-600 focus:ring-teal-500 border-gray-300 rounded"
          onChange="toggleTodo('${todo._id}')"
        />
        <label for="todo_${todo._id}" class="ml-3 block text-gray-900">
          <span class="text-lg font-medium">${todo.task}</span>
          <span class="text-sm font-light text-gray-500"
            >${todo.dealLine}</span>
        </label>
        <button onclick="deleteTodo('${todo._id}')">
            <svg xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 0 24 24" width="24"><path d="M0 0h24v24H0z" fill="none"/><path d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"/></svg>
          </button>
      </div>
      
    `;
        todoList.appendChild(listItem);
      })
    }

    function addTodo() {
      const taskValue = document.getElementById("newTask");
      console.log(taskValue)
      const task = taskValue.value;
      socket.emit("handleAddTodo", {
        task: task,
        deadLine: new Date().toLocaleDateString(),
        status: "pending",
      });
      taskValue.value = "";
    }

    function toggleTodo(todoId) {
      socket.emit("handleChangeStatus", {
        id: todoId
      })
    }

    const deleteTodo = (todoId)=>{
      socket.emit("deleteTodo",{
        id:todoId
      })
    }

  </script>
</body>

</html>